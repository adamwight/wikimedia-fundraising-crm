<?php

function wmf_civicrm_install()
{
    wmf_civicrm_update_6000();
    wmf_civicrm_update_6001();
    wmf_civicrm_update_6002();
    wmf_civicrm_update_6003();
    wmf_civicrm_update_6004();
    wmf_civicrm_update_6005();
}

/**
 * Add contribution types and payment instruments
 */
function wmf_civicrm_update_6000()
{
    $contribution_types = array(
        'Cash',
    );
    $payment_instruments = array(
        'Amazon',
        'Bank Transfer',
        'Boleto',
        'Bpay',
        'Cash',
        'Cashu',
        'Check',
        'Credit Card',
        'Credit Card: American Express',
        'Credit Card: Carte Bleue',
        'Credit Card: Discover',
        'Credit Card: JCB',
        'Credit Card: Laser',
        'Credit Card: Maestro',
        'Credit Card: MasterCard',
        'Credit Card: Solo',
        'Credit Card: Visa',
        'Direct Debit',
        'Enets',
        'EPS',
        'iDeal',
        'Moneybookers',
        'Nordea',
        'Paypal',
        'Sofort',
        'Webmoney',
    );

    wmf_civicrm_bootstrap_civi();
    wmf_civicrm_create_contribution_types($contribution_types);
    wmf_civicrm_create_payment_instruments($payment_instruments);

    return array();
}

/**
 * Add settlement date field
 */
function wmf_civicrm_update_6001()
{
    $api = wmf_civicrm_bootstrap_civi();
    $api->CustomGroup->get(array(
        'name' => 'contribution_extra',
    ));
    $result = $api->values();
    if (empty($result))
    {
        $success = $api->CustomGroup->create(array(
            'extends' => 'Contribution',
            'name' => 'contribution_extra',
            'table_name' => 'wmf_contribution_extra',
            'title' => ts('Contribution Extra'),
            'is_active' => 1,
        ));
        if (!$success) {
            throw new Exception($api->errorMsg());
        }
        $result = $api->values();
    }
    $custom_group = array_pop($api->values());

    $success = $api->CustomField->create(array(
        'custom_group_id' => $custom_group->id,
        'name' => 'settlement_date',
        'column_name' => 'settlement_date',
        'label' => ts('Settlement Date'),
        'data_type' => 'Date',
        'html_type' => 'Select Date',
        'is_active' => 1,
        'is_searchable' => 1,
        'is_search_range' => 1,
        'is_view' => 1,
        'date_format' => 'M d, yy',
        'time_format' => 2,
    ));
    if (!$success) {
        throw new Exception($api->errorMsg());
    }

    return array();
}

/**
 * Add non-authoritatize USD conversion estimate
 */
function wmf_civicrm_update_6002()
{
    $api = wmf_civicrm_bootstrap_civi();
    $success = $api->CustomGroup->get(array(
        'name' => 'contribution_extra',
    ));
    if (!$success) {
        throw new Exception($api->errorMsg());
    }
    $custom_group = array_pop($api->values());

    $success = $api->CustomField->create(array(
        'custom_group_id' => $custom_group->id,
        'name' => 'total_usd',
        'column_name' => 'total_usd',
        'label' => ts('Total in USD (approx)'),
        'data_type' => 'Money',
        'html_type' => 'Text',
        'is_active' => 1,
        'is_searchable' => 1,
        'is_search_range' => 1,
        'is_view' => 1,
    ));
    if (!$success) {
        throw new Exception($api->errorMsg());
    }

    return array();
}

function wmf_civicrm_update_6003()
{
    wmf_civicrm_bootstrap_civi();
    wmf_civicrm_create_contribution_types(array(
        'Merkle',
    ));
}

/**
 * Add gateway_account name field
 */
function wmf_civicrm_update_6004()
{
    $api = wmf_civicrm_bootstrap_civi();
    $success = $api->CustomGroup->get(array(
        'name' => 'contribution_extra',
    ));
    if (!$success) {
        throw new Exception($api->errorMsg());
    }
    $custom_group = array_pop($api->values());

    $success = $api->CustomField->create(array(
        'custom_group_id' => $custom_group->id,
        'name' => 'gateway_account',
        'column_name' => 'gateway_account',
        'label' => ts('Gateway Account Name'),
        'data_type' => 'String',
        'html_type' => 'Text',
        'is_active' => 1,
        'is_searchable' => 1,
        'is_view' => 1,
    ));
    if (!$success) {
        throw new Exception($api->errorMsg());
    }

    return array();
}

/**
 * Load civi api, only for use from within .install code
 */
function wmf_civicrm_bootstrap_civi()
{
    //XXX XXX REALLY?
    $civi_base = implode(DIRECTORY_SEPARATOR, array(drupal_get_path('module', 'civicrm'), '..'));
    set_include_path(
        implode(
            PATH_SEPARATOR,
            array(
                get_include_path(),
                $civi_base,
                $civi_base.DIRECTORY_SEPARATOR.'packages',
            )
        )
    );
    require_once "api/class.api.php";
    return new civicrm_api3(array('conf_path' => conf_path()));
}

function wmf_civicrm_create_contribution_types($contribution_types)
{
    require_once "CRM/Contribute/PseudoConstant.php";
    require_once "CRM/Contribute/BAO/ContributionType.php";
    foreach ($contribution_types as $type)
    {
        $contribution_type_id = CRM_Utils_Array::key(
            $type,
            CRM_Contribute_PseudoConstant::contributionType()
        );

        if (!$contribution_type_id)
        {
            $params = array(
                'is_active' => 1,
                'is_deductible' => 1,
                'accounting_code' => strtoupper($type),
                'name' => $type,
            );
            $ids = array();
            CRM_Contribute_BAO_ContributionType::add($params, $ids);
        }
    }
}

function wmf_civicrm_create_payment_instruments($payment_instruments)
{
    $api = wmf_civicrm_bootstrap_civi();

    $api->OptionGroup->Get(array(
        'name' => 'payment_instrument',
    ));
    $option_group = array_pop($api->values());
    foreach ($payment_instruments as $instrument)
    {
        $api->OptionValue->Get(array(
            'option_group_id' => $option_group->id,
            'name' => $instrument,
        ));

        $result = $api->values();
        if (empty($result))
        {
            $api->OptionValue->Create(array(
                'option_group_id' => $option_group->id,
                'name' => $instrument,
                'label' => $instrument,
                'is_active' => 1,
            ));
        }
    }
}

/**
 * More complete gateway and settlement recording. Adding a field to mark auditing-only transactions.
 */
function wmf_civicrm_update_6005()
{
	$ret = array();

    $api = wmf_civicrm_bootstrap_civi();
    $success = $api->CustomGroup->get(array(
        'name' => 'contribution_extra',
    ));
    if (!$success) {
        throw new Exception($api->errorMsg());
    }
    $custom_group = array_pop($api->values());

    $success = $api->CustomField->create(array(
        'custom_group_id' => $custom_group->id,
        'name' => 'gateway',
        'column_name' => 'gateway',
        'label' => ts('Gateway'),
        'data_type' => 'String',
        'html_type' => 'Text',
        'is_active' => 1,
        'is_searchable' => 1,
        'is_view' => 1,
    ));
    if (!$success) {
        $ret[] = array( 'success' => false, 'query' => $api->errorMsg() );
    }

    $success = $api->CustomField->create(array(
        'custom_group_id' => $custom_group->id,
        'name' => 'gateway_txn_id',
        'column_name' => 'gateway_txn_id',
        'label' => ts('Gateway Transaction ID'),
        'data_type' => 'String',
        'html_type' => 'Text',
        'is_active' => 1,
        'is_searchable' => 1,
        'is_view' => 1,
    ));
    if (!$success) {
        $ret[] = array( 'success' => false, 'query' => $api->errorMsg() );
    }

    $success = $api->CustomField->create(array(
        'custom_group_id' => $custom_group->id,
        'name' => 'original_amount',
        'column_name' => 'original_amount',
        'label' => ts('Original Amount Received'),
        'data_type' => 'Money',
        'html_type' => 'Text',
        'is_active' => 1,
        'is_searchable' => 1,
        'is_search_range' => 1,
        'is_view' => 1,
    ));
    if (!$success) {
        $ret[] = array( 'success' => false, 'query' => $api->errorMsg() );
    }

    $success = $api->CustomField->create(array(
        'custom_group_id' => $custom_group->id,
        'name' => 'original_currency',
        'column_name' => 'original_currency',
        'label' => ts('Original Currency Received'),
        'data_type' => 'String',
        'html_type' => 'Text',
        'is_active' => 1,
        'is_searchable' => 1,
        'is_view' => 1,
    ));
    if (!$success) {
        $ret[] = array( 'success' => false, 'query' => $api->errorMsg() );
    }

    $success = $api->CustomField->create(array(
        'custom_group_id' => $custom_group->id,
        'name' => 'settlement_usd',
        'column_name' => 'settlement_usd',
        'label' => ts('Settlement Total (USD)'),
        'data_type' => 'Money',
        'html_type' => 'Text',
        'is_active' => 1,
        'is_searchable' => 1,
        'is_search_range' => 1,
        'is_view' => 1,
    ));
    if (!$success) {
        $ret[] = array( 'success' => false, 'query' => $api->errorMsg() );
    }

    $success = $api->CustomField->create(array(
        'custom_group_id' => $custom_group->id,
        'name' => 'settlement_currency',
        'column_name' => 'settlement_currency',
        'label' => ts('Settlement Currency'),
        'data_type' => 'String',
        'html_type' => 'Text',
        'is_active' => 1,
        'is_searchable' => 1,
        'is_view' => 1,
    ));
    if (!$success) {
        $ret[] = array( 'success' => false, 'query' => $api->errorMsg() );
    }

    $success = $api->CustomField->create(array(
        'custom_group_id' => $custom_group->id,
        'name' => 'deposit_date',
        'column_name' => 'deposit_date',
        'label' => ts('Deposit Received Date'),
        'data_type' => 'Date',
        'html_type' => 'Select Date',
        'is_active' => 1,
        'is_searchable' => 1,
        'is_search_range' => 1,
        'is_view' => 1,
        'date_format' => 'M d, yy',
        'time_format' => 2,
    ));
    if (!$success) {
        $ret[] = array( 'success' => false, 'query' => $api->errorMsg() );
    }

    $success = $api->CustomField->create(array(
        'custom_group_id' => $custom_group->id,
        'name' => 'deposit_usd',
        'column_name' => 'deposit_usd',
        'label' => ts('Deposit Total (USD)'),
        'data_type' => 'Money',
        'html_type' => 'Text',
        'is_active' => 1,
        'is_searchable' => 1,
        'is_search_range' => 1,
        'is_view' => 1,
    ));
    if (!$success) {
        $ret[] = array( 'success' => false, 'query' => $api->errorMsg() );
    }

    $success = $api->CustomField->create(array(
        'custom_group_id' => $custom_group->id,
        'name' => 'deposit_currency',
        'column_name' => 'deposit_currency',
        'label' => ts('Deposit Currency'),
        'data_type' => 'String',
        'html_type' => 'Text',
        'is_active' => 1,
        'is_searchable' => 1,
        'is_view' => 1,
    ));
    if (!$success) {
        $ret[] = array( 'success' => false, 'query' => $api->errorMsg() );
    }

    $success = $api->CustomField->create(array(
        'custom_group_id' => $custom_group->id,
        'name' => 'finance_only',
        'column_name' => 'finance_only',
        'label' => ts('Finance Auditing Only'),
        'data_type' => 'Boolean',
        'html_type' => 'Radio',
        'is_active' => 1,
        'is_searchable' => 1,
        'is_view' => 1,
    ));
    if (!$success) {
        $ret[] = array( 'success' => false, 'query' => $api->errorMsg() );
    }

    return $ret;
}
