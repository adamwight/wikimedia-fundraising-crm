<?php

/**
 * return a map of option value (id) => option name
 */
function civicrm_api_option_group($group_name, $key = null)
{
	static $cached_group = array();
	if (!array_key_exists($group_name, $cached_group))
	{
		$api = civicrm_api_classapi();
		$api->OptionValue->Get(array(
			'option_group_name' => $group_name,
		));
		$cached_group[$group_name] = array();
		$option_values = $api->values();
		foreach ($option_values as $row)
		{
			$cached_group[$group_name][$row->value] = $row->name;
		}
	}
	if ($key)
	{
		// In this case, just lookup name and return the option value
		$forwards = array_flip($cached_group[$group_name]);
		return $forwards[$key];
	}
	return $cached_group[$group_name];
}

function civicrm_api_contribution_status($key = null)
{
	return civicrm_api_option_group('contribution_status', $key);
}

function civicrm_api_classapi()
{
	civicrm_initialize();
	if (module_load_include('php', 'civicrm', '../api/class.api') === FALSE)
	{
		watchdog('civicrm_api', t('Failed to load civicrm api classes'), array(), WATCHDOG_ERROR);
	}
	else
	{
		return new civicrm_api3();
	}
}

/**
 * Determines the settlement currency for a given donation.
 * Argument is a queue message or a civicrm contribution array.
 */
function wmf_civicrm_get_settlement_currency($transaction)
{
	return 'USD';
}

function wmf_civicrm_settle($contribution, $settled_timestamp)
{
	civicrm_initialize();

	require_once 'CRM/Core/BAO/CustomValueTable.php';
	static $custom_field_key = array();
	if (empty($custom_field_key))
	{
		require_once 'CRM/Core/BAO/CustomField.php';
		foreach (array('total_usd', 'settlement_date') as $name)
		{
			$id = CRM_Core_BAO_CustomField::getCustomFieldID($name, 'contribution_extra');
			$custom_field_key[$name] = "custom_{$id}";
		}
	}

	list($original_currency, $original_amount) = explode(" ", $contribution['source']);
	$total_usd = round(exchange_rate_convert($original_currency, $original_amount, $settled_timestamp), 2);
	$settlement_date = date( 'YmdHis', $settled_timestamp );

	$params = array(
		'entityID' => $contribution['id'],
		$custom_field_key['total_usd'] => $total_usd,
		$custom_field_key['settlement_date'] => $settlement_date,
	);
	$result = CRM_Core_BAO_CustomValueTable::setValues($params);
	if (!empty($result['is_error']))
	{
		watchdog('wmf_civicrm', 'Failed to settle contribution %id: %err', array("%id" => $contribution['id'], "%err" => $result['error_message']), WATCHDOG_ERROR);
	}
}
