<?php

// TODO: schema is out of sync with requirements.

function public_reporting_schema() {
	$schema['public_reporting'] = array(
		'description' => t('Public reporting tables'),
		'fields' => array(
			'contribution_id' => array(
				'type' => 'int',
				'unsigned' => TRUE,
				'not null' => TRUE),
			'contact_id' => array(
				'type' => 'int',
				'unsigned' => TRUE,
				'not null' => TRUE),
			'name' => array(
				'type' => 'varchar',
				'length' => 128,
				'default' => NULL),
			'converted_amount' => array(
				'type' => 'numeric',
				'precision' => 20,
				'scale' => 2,
				'unsigned' => TRUE,
				'not null' => TRUE),
			'original_currency' => array(
				'type' => 'varchar',
				'length' => 3,
//	nullable in db
//				'not null' => TRUE
				),
			'original_amount' => array(
				'type' => 'numeric',
				'precision' => 20,
				'scale' => 2,
				'unsigned' => TRUE,
//	nullable in db
//				'not null' => TRUE
				),
			'note' => array(
				'type' => 'text',
//	nullable in db	
//				'not null' => TRUE
				),
			'received' => array(
				'type' => 'int',
				'unsigned' => TRUE,
				'not null' => TRUE
			)
		),
    	'indexes' => array(
			'contact_id' => array('contact_id'),
			'received' => array('received'),
			'with_notes' => array(array('note',1), 'received'),
			'with_currency' => array('original_currency', 'received'),
			//next line was not in files
			'converted_amount_id' => array('converted_amount'),
		),
		'primary key' => array('contribution_id'),
		'mysql_suffix' => 'ENGINE=InnoDB DEFAULT CHARSET=utf8'

	);

	return $schema;
}

function public_reporting_install() {
	$dbs = wmf_civicrm_get_dbs();
	$dbs->push( 'civicrm' );
	drupal_install_schema('public_reporting');
	$queryResult =  db_query(public_reporting_get_FK_command());

	watchdog("public_reporting.install", "FK command result: " . print_r($queryResult, true) );

	public_reporting_update_6000();
	public_reporting_update_6001();
}

function public_reporting_uninstall() {
	$dbs = wmf_civicrm_get_dbs();
	$dbs->push( 'civicrm' );
	drupal_uninstall_schema('public_reporting');
}

function public_reporting_get_FK_command(){
	return "ALTER TABLE {public_reporting}
		ADD CONSTRAINT `public_reporting_ibfk_1` FOREIGN KEY (`contribution_id`) REFERENCES `civicrm_contribution` (`id`) ON DELETE CASCADE,
		ADD CONSTRAINT `public_reporting_ibfk_2` FOREIGN KEY (`contact_id`) REFERENCES `civicrm_contact` (`id`) ON DELETE CASCADE;";
}

function public_reporting_update_6000() {
	$ret = array();

	$dbs = wmf_civicrm_get_dbs();
	$dbs->push( 'civicrm' );

	$sql = <<<EOS
ALTER TABLE {public_reporting}
	DROP FOREIGN KEY public_reporting_ibfk_2;
EOS;
	$ret[] = update_sql( $sql );

	$sqlResult = module_invoke( 'public_reporting', 'execute_sql_file', 'triggers.sql' );
	watchdog("public_reporting.install", "Trigger Creation Result: " . print_r($sqlResult, true) );
	$ret[] = array( 'success' => $sqlResult, 'query' => "... create triggers" );

	return $ret;
}

/**
 * Aggregate data, donations per country per hour
 */
function public_reporting_update_6001() {
	$ret = array();

	$dbs = wmf_civicrm_get_dbs();
	$dbs->push( 'civicrm' );

	$sqlResult = module_invoke( 'public_reporting', 'execute_sql_file', 'public-reporting-hours.sql' );
	$ret[] = array( 'success' => $sqlResult, 'query' => "... create table public_reporting_country_hours" );

	return $ret;
}
