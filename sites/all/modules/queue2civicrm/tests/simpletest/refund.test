<?php

require_once __DIR__ . '/BaseTestCase.php';
require_once __DIR__ . '/../includes/Message.php';

class RefundTest extends BaseTestCase {
    public function setUp() {
        parent::setUp();

        $this->payment_message = new TransactionMessage();
        $this->parent_txn_id = WmfTransaction::parse( $this->payment_message->getBody() )->gateway_txn_id;

        $this->refund_message = new RefundMessage( array(
            'gateway_parent_id' => $this->parent_txn_id,
        ) );
    }

    public static function getInfo() {
        return array(
            'name' => 'Refund message',
            'group' => 'Pipeline',
            'description' => 'Process a refund message',
        );
    }

    public function testImportRefund() {
        module_invoke( 'queue2civicrm', 'import', $this->payment_message );
        module_invoke( 'refund', 'import', $this->refund_message );

#$data = $this->payment_message->getBody();
#error_log( "parent: " . WmfTransaction::parse( $data )->get_unique_id() );

        $refund_data = $this->refund_message->getBody();
#error_log( "refund: " . WmfTransaction::parse( $refund_data['gateway_refund_id'] )->get_unique_id() );
        $contributions = wmf_civicrm_get_contributions_from_gateway_id( $refund_data['gateway'], $this->parent_txn_id );
#error_log( print_r( $contributions[0], true ) );
        $this->assertTrue( $contributions && count( $contributions ),
            "found parent transaction" );
        $this->assertEqual( true, $contributions[0]['finance_only'],
            "parent's finance_only flag was set" );

        $contributions = wmf_civicrm_get_contributions_from_gateway_id( $refund_data['gateway'], $refund_data['gateway_refund_id'] );
        $this->assertTrue( $contributions && count( $contributions ),
            "found refund transaction" );
        $this->assertEqual( $refund_data['gateway_refund_id'], $contributions[0]['gateway_txn_id'],
            "child txn id was set" );
        $this->assertEqual( true, $contributions[0]['finance_only'],
            "refund's finance_only flag was set" );
        $this->assertEqual( $refund_data['gateway'], $contributions[0]['gateway'],
            "refund's gateway is correct" );
    }
}
